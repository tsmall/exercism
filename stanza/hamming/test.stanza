defpackage hamming/test :
    import taptests
    import hamming

val tests = TestSuite()

eq(tests, hamming-distance("", ""), 0, "empty strands")
eq(tests, hamming-distance("A", "A"), 0, "identical strands")
eq(tests, hamming-distance("GGACTGA", "GGACTGA"), 0, "long identical strands")
eq(tests, hamming-distance("A", "G"), 1, "complete distance in single nucleotide strands")
eq(tests, hamming-distance("AG", "CT"), 2, "complete distance in small strands")
eq(tests, hamming-distance("AT", "CT"), 1, "small distance in small strands")
eq(tests, hamming-distance("GGACG", "GGTCG"), 1, "small distance")
eq(tests, hamming-distance("ACCAGGG", "ACTATGG"), 2, "small distance in long strands")
eq(tests, hamming-distance("AAA", "AAG"), 1, "non unique character in first strand")
eq(tests, hamming-distance("TAG", "GAT"), 2, "same nucleotides in different positions")
eq(tests, hamming-distance("GATACA", "GCATAA"), 4, "large distance")
eq(tests, hamming-distance("GGACGGATTCTG", "AGGACGGATTCT"), 9, "large distance in off by one strand")

throws(tests, {hamming-distance("AATG", "AAA")}, "disallow first strand longer")
throws(tests, {hamming-distance("ATA", "AGTG")}, "disallow second strand longer")

run-all(tests)
