'From Pharo6.0 of 13 May 2016 [Latest update: #60501] on 10 March 2018 at 4:05:22.148053 pm'!Object subclass: #HammingDistance	instanceVariableNames: 'strandOne strandTwo'	classVariableNames: ''	poolDictionaries: ''	category: 'Exercism'!!HammingDistance commentStamp: 'TomSmall 3/10/2018 15:44' prior: 0!I represent the Hamming Distance between two DNA strands. Once created, I can tell you the number of nucleotides that don't match between the two strands.An example of what I can do:	distance := HammingDistance between: 'A' and: 'G'.	distance value!!HammingDistance methodsFor: 'private' stamp: 'TomSmall 3/9/2018 07:19'!mismatches	^ (1 to: strandOne size)		select: [ :i | (strandOne at: i) ~= (strandTwo at: i) ]! !!HammingDistance methodsFor: 'evaluating' stamp: 'TomSmall 3/9/2018 07:20'!value	^ self mismatches size! !!HammingDistance methodsFor: 'instance creation' stamp: 'TomSmall 3/8/2018 23:10'!strandOne: aString	strandOne := aString! !!HammingDistance methodsFor: 'instance creation' stamp: 'TomSmall 3/8/2018 23:10'!strandTwo: aString	strandTwo := aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HammingDistance class	instanceVariableNames: ''!!HammingDistance class methodsFor: 'construction' stamp: 'TomSmall 3/10/2018 15:43'!between: strandOneString and: strandTwoString	self assert: [ strandOneString size = strandTwoString size ].	^ self new		strandOne: strandOneString;		strandTwo: strandTwoString;		yourself! !